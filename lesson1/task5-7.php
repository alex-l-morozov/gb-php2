<?php
/*
 * Task 5
 * Дан код. Что он выведет на каждом шаге? Почему?
 *
 * class A {
 *     public function foo() {
 *         static $x = 0; // Статичная переменная, принадлежит методу
 *         echo ++$x; // Префиксный инкремент (увеличиваем -> выводим)
 *     }
 * }
 *
 * $a1 = new A(); // Создаем экземпляр класса А (одна область памяти)
 * $a2 = new A(); // Создаем второй экземпляр класса А (ссылка на ту же область памяти)
 * $a1->foo(); // Будет выполнена операция инкремента и выведено значение 1
 * $a2->foo(); // Так как это экземпляр класса А static переменная x принадлежит классу А и хранит значение 1, будет выполнена операция инкремента и выведено значение 2
 * $a1->foo(); // Принцип тот же что и у первого обращения, x хранит значение 2, будет выполнена операция инкремента и выведено значение 3
 * $a2->foo(); // x хранит 3, будет выполнена операция инкремента и выведено значение 4
 */

/*
 * Task 6
 * Немного изменим код. Объясните результаты в этом случае
 * class A {
 *     public function foo() {
 *         static $x = 0; // Статичная переменная, принадлежит методу
 *         echo ++$x; // Префиксный инкремент (увеличиваем -> выводим)
 *     }
 * }
 *
 * class B extends A { // будет содержать тот же метод foo()
 *
 * }
 *
 * $a1 = new A(); // Создаем экземпляр класса А (одна область памяти)
 * $b1 = new B(); // Создаем экземпляр класса B (другая область памяти)
 * $a1->foo(); // Инкремент переменной в классе A, получаем 1
 * $b1->foo(); // Инкремент переменной в классе B, получаем 1
 * $a1->foo(); // Инкремент переменной в классе A, получаем 2
 * $b1->foo(); // Инкремент переменной в классе B, получаем 2
 */

/*
 * Task 7
 * Что он выведет на каждом шаге? Почему?
 * class A {
 *     public function foo() {
 *         static $x = 0;
 *         echo ++$x;
 *     }
 * }
 *
 * class B extends A {
 * }
 *
 * $a1 = new A;
 * $b1 = new B;
 * $a1->foo();
 * $b1->foo();
 * $a1->foo();
 * $b1->foo();
 *
 * 1122 как и в задании выше. Отличие только в том что объявление классов без скобок. Это возможно, если нет никаких параметров (отсутствует конструктор, который может принимать на вход параметры).
 *
 */
